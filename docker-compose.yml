version: '3.8'

services:
  client:
    build:
      context: ./client
    container_name: next-client
    ports:
      - "3000:3000"
    env_file:
      - ./client/.env
    depends_on:
      - server
    environment:
      NEXT_PUBLIC_API_URL: https://twojadomena.pl/api
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network

  server:
    build:
      context: ./server
    container_name: next-server
    ports:
      - "3001:3001"
    env_file:
      - ./server/.env
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: next-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER_ROOT}
      PMA_PASSWORD: ${MYSQL_PASSWORD_ROOT}
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: next-mysql
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: next-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network


#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx/conf.d:/etc/nginx/conf.d
#       - ./certbot/www:/var/www/certbot
#       - ./certbot/conf:/etc/letsencrypt
#     depends_on:
#       - client
#       - server
#       - phpmyadmin
#     networks:
#       - app-network

#   certbot:
#     image: certbot/certbot
#     container_name: certbot
#     volumes:
#       - ./certbot/www:/var/www/certbot
#       - ./certbot/conf:/etc/letsencrypt
#     entrypoint: >
#       sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
#              --email your@email.com --agree-tos --no-eff-email
#              -d twojadomena.pl -d www.twojadomena.pl"
#     networks:
#       - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  redis_data:
